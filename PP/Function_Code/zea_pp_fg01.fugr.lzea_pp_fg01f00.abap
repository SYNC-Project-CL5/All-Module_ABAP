*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZEA_PPV02.......................................*
FORM GET_DATA_ZEA_PPV02.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZEA_CRHD WHERE
(VIM_WHERETAB) .
    CLEAR ZEA_PPV02 .
ZEA_PPV02-MANDT =
ZEA_CRHD-MANDT .
ZEA_PPV02-WERKS =
ZEA_CRHD-WERKS .
ZEA_PPV02-WCID =
ZEA_CRHD-WCID .
ZEA_PPV02-WCNAME =
ZEA_CRHD-WCNAME .
ZEA_PPV02-LOEKZ =
ZEA_CRHD-LOEKZ .
ZEA_PPV02-ERNAM =
ZEA_CRHD-ERNAM .
ZEA_PPV02-ERDAT =
ZEA_CRHD-ERDAT .
ZEA_PPV02-ERZET =
ZEA_CRHD-ERZET .
ZEA_PPV02-AENAM =
ZEA_CRHD-AENAM .
ZEA_PPV02-AEDAT =
ZEA_CRHD-AEDAT .
ZEA_PPV02-AEZET =
ZEA_CRHD-AEZET .
    SELECT SINGLE * FROM ZEA_T001W WHERE
WERKS = ZEA_CRHD-WERKS .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = ZEA_PPV02.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZEA_PPV02 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZEA_PPV02.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZEA_PPV02-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZEA_CRHD WHERE
  WCID = ZEA_PPV02-WCID .
    IF SY-SUBRC = 0.
    DELETE ZEA_CRHD .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZEA_CRHD WHERE
  WCID = ZEA_PPV02-WCID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZEA_CRHD.
    ENDIF.
ZEA_CRHD-MANDT =
ZEA_PPV02-MANDT .
ZEA_CRHD-WERKS =
ZEA_PPV02-WERKS .
ZEA_CRHD-WCID =
ZEA_PPV02-WCID .
ZEA_CRHD-WCNAME =
ZEA_PPV02-WCNAME .
ZEA_CRHD-LOEKZ =
ZEA_PPV02-LOEKZ .
ZEA_CRHD-ERNAM =
ZEA_PPV02-ERNAM .
ZEA_CRHD-ERDAT =
ZEA_PPV02-ERDAT .
ZEA_CRHD-ERZET =
ZEA_PPV02-ERZET .
ZEA_CRHD-AENAM =
ZEA_PPV02-AENAM .
ZEA_CRHD-AEDAT =
ZEA_PPV02-AEDAT .
ZEA_CRHD-AEZET =
ZEA_PPV02-AEZET .
    IF SY-SUBRC = 0.
    UPDATE ZEA_CRHD ##WARN_OK.
    ELSE.
    INSERT ZEA_CRHD .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZEA_PPV02-UPD_FLAG,
STATUS_ZEA_PPV02-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZEA_PPV02.
  SELECT SINGLE * FROM ZEA_CRHD WHERE
WCID = ZEA_PPV02-WCID .
ZEA_PPV02-MANDT =
ZEA_CRHD-MANDT .
ZEA_PPV02-WERKS =
ZEA_CRHD-WERKS .
ZEA_PPV02-WCID =
ZEA_CRHD-WCID .
ZEA_PPV02-WCNAME =
ZEA_CRHD-WCNAME .
ZEA_PPV02-LOEKZ =
ZEA_CRHD-LOEKZ .
ZEA_PPV02-ERNAM =
ZEA_CRHD-ERNAM .
ZEA_PPV02-ERDAT =
ZEA_CRHD-ERDAT .
ZEA_PPV02-ERZET =
ZEA_CRHD-ERZET .
ZEA_PPV02-AENAM =
ZEA_CRHD-AENAM .
ZEA_PPV02-AEDAT =
ZEA_CRHD-AEDAT .
ZEA_PPV02-AEZET =
ZEA_CRHD-AEZET .
    SELECT SINGLE * FROM ZEA_T001W WHERE
WERKS = ZEA_CRHD-WERKS .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZEA_PPV02 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZEA_PPV02-WCID TO
ZEA_CRHD-WCID .
MOVE ZEA_PPV02-MANDT TO
ZEA_CRHD-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZEA_CRHD'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZEA_CRHD TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZEA_CRHD'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZEA_PPV02 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZEA_CRHD-MANDT =
ZEA_PPV02-MANDT .
ZEA_CRHD-WERKS =
ZEA_PPV02-WERKS .
ZEA_CRHD-WCID =
ZEA_PPV02-WCID .
ZEA_CRHD-WCNAME =
ZEA_PPV02-WCNAME .
ZEA_CRHD-LOEKZ =
ZEA_PPV02-LOEKZ .
ZEA_CRHD-ERNAM =
ZEA_PPV02-ERNAM .
ZEA_CRHD-ERDAT =
ZEA_PPV02-ERDAT .
ZEA_CRHD-ERZET =
ZEA_PPV02-ERZET .
ZEA_CRHD-AENAM =
ZEA_PPV02-AENAM .
ZEA_CRHD-AEDAT =
ZEA_PPV02-AEDAT .
ZEA_CRHD-AEZET =
ZEA_PPV02-AEZET .
    SELECT SINGLE * FROM ZEA_T001W WHERE
WERKS = ZEA_CRHD-WERKS .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: ZEA_PPV04.......................................*
FORM GET_DATA_ZEA_PPV04.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZEA_T001W WHERE
(VIM_WHERETAB) .
    CLEAR ZEA_PPV04 .
ZEA_PPV04-MANDT =
ZEA_T001W-MANDT .
ZEA_PPV04-WERKS =
ZEA_T001W-WERKS .
ZEA_PPV04-BUKRS =
ZEA_T001W-BUKRS .
ZEA_PPV04-PNAME1 =
ZEA_T001W-PNAME1 .
ZEA_PPV04-ADRNR =
ZEA_T001W-ADRNR .
ZEA_PPV04-PTELNO =
ZEA_T001W-PTELNO .
ZEA_PPV04-EMPNAME =
ZEA_T001W-EMPNAME .
ZEA_PPV04-LOEKZ =
ZEA_T001W-LOEKZ .
ZEA_PPV04-ERNAM =
ZEA_T001W-ERNAM .
ZEA_PPV04-ERDAT =
ZEA_T001W-ERDAT .
ZEA_PPV04-ERZET =
ZEA_T001W-ERZET .
ZEA_PPV04-AENAM =
ZEA_T001W-AENAM .
ZEA_PPV04-AEDAT =
ZEA_T001W-AEDAT .
ZEA_PPV04-AEZET =
ZEA_T001W-AEZET .
<VIM_TOTAL_STRUC> = ZEA_PPV04.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZEA_PPV04 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZEA_PPV04.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZEA_PPV04-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZEA_T001W WHERE
  WERKS = ZEA_PPV04-WERKS .
    IF SY-SUBRC = 0.
    DELETE ZEA_T001W .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZEA_T001W WHERE
  WERKS = ZEA_PPV04-WERKS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZEA_T001W.
    ENDIF.
ZEA_T001W-MANDT =
ZEA_PPV04-MANDT .
ZEA_T001W-WERKS =
ZEA_PPV04-WERKS .
ZEA_T001W-BUKRS =
ZEA_PPV04-BUKRS .
ZEA_T001W-PNAME1 =
ZEA_PPV04-PNAME1 .
ZEA_T001W-ADRNR =
ZEA_PPV04-ADRNR .
ZEA_T001W-PTELNO =
ZEA_PPV04-PTELNO .
ZEA_T001W-EMPNAME =
ZEA_PPV04-EMPNAME .
ZEA_T001W-LOEKZ =
ZEA_PPV04-LOEKZ .
ZEA_T001W-ERNAM =
ZEA_PPV04-ERNAM .
ZEA_T001W-ERDAT =
ZEA_PPV04-ERDAT .
ZEA_T001W-ERZET =
ZEA_PPV04-ERZET .
ZEA_T001W-AENAM =
ZEA_PPV04-AENAM .
ZEA_T001W-AEDAT =
ZEA_PPV04-AEDAT .
ZEA_T001W-AEZET =
ZEA_PPV04-AEZET .
    IF SY-SUBRC = 0.
    UPDATE ZEA_T001W ##WARN_OK.
    ELSE.
    INSERT ZEA_T001W .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZEA_PPV04-UPD_FLAG,
STATUS_ZEA_PPV04-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZEA_PPV04.
  SELECT SINGLE * FROM ZEA_T001W WHERE
WERKS = ZEA_PPV04-WERKS .
ZEA_PPV04-MANDT =
ZEA_T001W-MANDT .
ZEA_PPV04-WERKS =
ZEA_T001W-WERKS .
ZEA_PPV04-BUKRS =
ZEA_T001W-BUKRS .
ZEA_PPV04-PNAME1 =
ZEA_T001W-PNAME1 .
ZEA_PPV04-ADRNR =
ZEA_T001W-ADRNR .
ZEA_PPV04-PTELNO =
ZEA_T001W-PTELNO .
ZEA_PPV04-EMPNAME =
ZEA_T001W-EMPNAME .
ZEA_PPV04-LOEKZ =
ZEA_T001W-LOEKZ .
ZEA_PPV04-ERNAM =
ZEA_T001W-ERNAM .
ZEA_PPV04-ERDAT =
ZEA_T001W-ERDAT .
ZEA_PPV04-ERZET =
ZEA_T001W-ERZET .
ZEA_PPV04-AENAM =
ZEA_T001W-AENAM .
ZEA_PPV04-AEDAT =
ZEA_T001W-AEDAT .
ZEA_PPV04-AEZET =
ZEA_T001W-AEZET .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZEA_PPV04 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZEA_PPV04-WERKS TO
ZEA_T001W-WERKS .
MOVE ZEA_PPV04-MANDT TO
ZEA_T001W-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZEA_T001W'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZEA_T001W TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZEA_T001W'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
