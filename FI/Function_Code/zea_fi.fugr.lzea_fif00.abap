*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZEA_FI_SKA1.....................................*
FORM GET_DATA_ZEA_FI_SKA1.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZEA_SKA1 WHERE
(VIM_WHERETAB) .
    CLEAR ZEA_FI_SKA1 .
ZEA_FI_SKA1-MANDT =
ZEA_SKA1-MANDT .
ZEA_FI_SKA1-BPCODE =
ZEA_SKA1-BPCODE .
ZEA_FI_SKA1-BPROLE =
ZEA_SKA1-BPROLE .
ZEA_FI_SKA1-BPNAME =
ZEA_SKA1-BPNAME .
ZEA_FI_SKA1-BPCSNR =
ZEA_SKA1-BPCSNR .
ZEA_FI_SKA1-BPHAED =
ZEA_SKA1-BPHAED .
ZEA_FI_SKA1-BPADRR =
ZEA_SKA1-BPADRR .
ZEA_FI_SKA1-BPSTAT =
ZEA_SKA1-BPSTAT .
ZEA_FI_SKA1-ZLSCH =
ZEA_SKA1-ZLSCH .
ZEA_FI_SKA1-EMAIL =
ZEA_SKA1-EMAIL .
ZEA_FI_SKA1-LAND1 =
ZEA_SKA1-LAND1 .
    SELECT * FROM ZEA_T005 WHERE
LAND1 = ZEA_SKA1-LAND1 .
      EXIT.
    ENDSELECT.
<VIM_TOTAL_STRUC> = ZEA_FI_SKA1.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZEA_FI_SKA1 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZEA_FI_SKA1.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZEA_FI_SKA1-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZEA_SKA1 WHERE
  BPCODE = ZEA_FI_SKA1-BPCODE AND
  BPROLE = ZEA_FI_SKA1-BPROLE .
    IF SY-SUBRC = 0.
    DELETE ZEA_SKA1 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZEA_SKA1 WHERE
  BPCODE = ZEA_FI_SKA1-BPCODE AND
  BPROLE = ZEA_FI_SKA1-BPROLE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZEA_SKA1.
    ENDIF.
ZEA_SKA1-MANDT =
ZEA_FI_SKA1-MANDT .
ZEA_SKA1-BPCODE =
ZEA_FI_SKA1-BPCODE .
ZEA_SKA1-BPROLE =
ZEA_FI_SKA1-BPROLE .
ZEA_SKA1-BPNAME =
ZEA_FI_SKA1-BPNAME .
ZEA_SKA1-BPCSNR =
ZEA_FI_SKA1-BPCSNR .
ZEA_SKA1-BPHAED =
ZEA_FI_SKA1-BPHAED .
ZEA_SKA1-BPADRR =
ZEA_FI_SKA1-BPADRR .
ZEA_SKA1-BPSTAT =
ZEA_FI_SKA1-BPSTAT .
ZEA_SKA1-ZLSCH =
ZEA_FI_SKA1-ZLSCH .
ZEA_SKA1-EMAIL =
ZEA_FI_SKA1-EMAIL .
ZEA_SKA1-LAND1 =
ZEA_FI_SKA1-LAND1 .
    IF SY-SUBRC = 0.
    UPDATE ZEA_SKA1 ##WARN_OK.
    ELSE.
    INSERT ZEA_SKA1 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZEA_FI_SKA1-UPD_FLAG,
STATUS_ZEA_FI_SKA1-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZEA_FI_SKA1.
  SELECT SINGLE * FROM ZEA_SKA1 WHERE
BPCODE = ZEA_FI_SKA1-BPCODE AND
BPROLE = ZEA_FI_SKA1-BPROLE .
ZEA_FI_SKA1-MANDT =
ZEA_SKA1-MANDT .
ZEA_FI_SKA1-BPCODE =
ZEA_SKA1-BPCODE .
ZEA_FI_SKA1-BPROLE =
ZEA_SKA1-BPROLE .
ZEA_FI_SKA1-BPNAME =
ZEA_SKA1-BPNAME .
ZEA_FI_SKA1-BPCSNR =
ZEA_SKA1-BPCSNR .
ZEA_FI_SKA1-BPHAED =
ZEA_SKA1-BPHAED .
ZEA_FI_SKA1-BPADRR =
ZEA_SKA1-BPADRR .
ZEA_FI_SKA1-BPSTAT =
ZEA_SKA1-BPSTAT .
ZEA_FI_SKA1-ZLSCH =
ZEA_SKA1-ZLSCH .
ZEA_FI_SKA1-EMAIL =
ZEA_SKA1-EMAIL .
ZEA_FI_SKA1-LAND1 =
ZEA_SKA1-LAND1 .
    SELECT * FROM ZEA_T005 WHERE
LAND1 = ZEA_SKA1-LAND1 .
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZEA_FI_SKA1 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZEA_FI_SKA1-BPCODE TO
ZEA_SKA1-BPCODE .
MOVE ZEA_FI_SKA1-BPROLE TO
ZEA_SKA1-BPROLE .
MOVE ZEA_FI_SKA1-MANDT TO
ZEA_SKA1-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZEA_SKA1'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZEA_SKA1 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZEA_SKA1'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZEA_FI_SKA1 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZEA_SKA1-MANDT =
ZEA_FI_SKA1-MANDT .
ZEA_SKA1-BPCODE =
ZEA_FI_SKA1-BPCODE .
ZEA_SKA1-BPROLE =
ZEA_FI_SKA1-BPROLE .
ZEA_SKA1-BPNAME =
ZEA_FI_SKA1-BPNAME .
ZEA_SKA1-BPCSNR =
ZEA_FI_SKA1-BPCSNR .
ZEA_SKA1-BPHAED =
ZEA_FI_SKA1-BPHAED .
ZEA_SKA1-BPADRR =
ZEA_FI_SKA1-BPADRR .
ZEA_SKA1-BPSTAT =
ZEA_FI_SKA1-BPSTAT .
ZEA_SKA1-ZLSCH =
ZEA_FI_SKA1-ZLSCH .
ZEA_SKA1-EMAIL =
ZEA_FI_SKA1-EMAIL .
ZEA_SKA1-LAND1 =
ZEA_FI_SKA1-LAND1 .
    SELECT * FROM ZEA_T005 WHERE
LAND1 = ZEA_SKA1-LAND1 .
      EXIT.
    ENDSELECT.
    IF SY-SUBRC NE 0.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
